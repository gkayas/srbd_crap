package refapp;

import java.util.ArrayList;

import javafx.beans.property.SimpleStringProperty;

public class AppInfo {

	private SimpleStringProperty name;
	private SimpleStringProperty binary;
	private SimpleStringProperty install;
	private SimpleStringProperty exploratory ;
	private SimpleStringProperty uninstall;
	
	
	private ArrayList<TestInfo> tcList;
	private String appName;
	private String binaryName;
	
	public void setTCResult(String tcName, TCResult result) {
		getTestInfo(tcName).setResult(result);
	}
	
	public String getTCResult(String tcName) {
		return getTestInfo(tcName).getResult().toString();
	}
	
	private TestInfo getTestInfo(String testInfoType) {
		TestInfo installTest = null;
		for (TestInfo testInfo : tcList) {
			if(testInfo.getTcName().equals(testInfoType)) {
				installTest = testInfo;
			}
		}
		return installTest;
	}

	public AppInfo() {
	
		this.install = new SimpleStringProperty();
		this.exploratory = new SimpleStringProperty();
		this.uninstall = new SimpleStringProperty();
	}
	
	public AppInfo (ArrayList<TestInfo> testCaseList, String name, String binaryName) {
		this.tcList = testCaseList;
		this.appName = name;
		this.binaryName = binaryName;
		this.name = new SimpleStringProperty(name);
		this.binary = new SimpleStringProperty(binaryName);
		this.install = new SimpleStringProperty();
		this.exploratory = new SimpleStringProperty();
		this.uninstall = new SimpleStringProperty();
	}
	
	public ArrayList<TestInfo> getTcList() {
		return tcList;
	}
	public void setTcList(ArrayList<TestInfo> tcList) {
		this.tcList = tcList;
	}
	public String getAppName() {
		return appName;
	}
	public void setAppName(String appName) {
		System.out.println("Inside setApp : "+ appName);
		
		this.appName = appName;
	}
	public String getBinary() {
		return binaryName;
	}

	public void setBinaryName(String binaryName) {
		this.binaryName = binaryName;
	}

	public SimpleStringProperty nameProperty() {
		this.name.set(appName);
		return name;
	}
	
	public SimpleStringProperty binaryProperty() {
		this.binary.set(binaryName);
		return binary;
	}
	
	public SimpleStringProperty installProperty() {
		TestInfo installTest = getTestInfo("install");
		install.set(installTest.getResult().toString());
		return install;
	}
	
	public SimpleStringProperty uninstallProperty() {
		TestInfo uninstallTest = getTestInfo("uninstall");
		uninstall.set(uninstallTest.getResult().toString());
		return uninstall;
	}
	
	public SimpleStringProperty exploratoryProperty() {
		TestInfo exploratoryTest =  getTestInfo("exploratory");
		exploratory.set(exploratoryTest.getResult().toString());
		return exploratory;
	}
	
	public void setName(SimpleStringProperty name) {
		this.name = name;
	}
	
	public void setBinary(SimpleStringProperty name) {
		this.binary = name;
	}
	
	public void setInstall(SimpleStringProperty name) {
		this.install = name;
	}
	
	public void setExploratory(SimpleStringProperty name) {
		this.exploratory = name;
	}
	
	public void setUninstall(SimpleStringProperty name) {
		this.uninstall = name;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof AppInfo)) {
			return false;
		}
		AppInfo target = (AppInfo) obj;
		
		return this.appName.equals(target.getAppName());
	}
	
	public void copy(AppInfo target) {
		this.tcList = target.getTcList();
	}

	public SimpleStringProperty getName() {
		return name;
	}

	public SimpleStringProperty getInstall() {
		return install;
	}

	public SimpleStringProperty getExploratory() {
		return exploratory;
	}

	public SimpleStringProperty getUninstall() {
		return uninstall;
	}

	public String getBinaryName() {
		return binaryName;
	}
	
	@Override
	public String toString() {
		return appName + "," + binaryName + "," + getTCResult("install") + "," + getTCResult("exploratory") + "," + getTCResult("uninstall");
	}
}
