package apprunner;

import java.awt.List;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.lang.model.element.Element;
import javax.swing.text.Document;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.*;
import org.jsoup.select.Elements;

public class JsoupXMLParser {

//	public static ArrayList<AppInfo> parseXML(String filePath) {
//		ArrayList<AppInfo> appInfoList = new ArrayList<AppInfo>();
//		try {
//			Document doc = Jsoup.parse(new File(filePath), "UTF-8");
//			Elements apps = doc.select("app");
//			
//			for (Element app : apps) {
//				String name = app.attr("name");
//				String binary = app.attr("binary");
//				
//				ArrayList<TestInfo> testcases = new ArrayList<TestInfo>();
//				Elements childern = app.children().select("TC");
//				
//				for (Element child : childern) {
//					String tcName = child.attr("name");
//					TestInfo testcase = new TestInfo(tcName, TCResult.NT);
//					testcase.setLevel(Integer.parseInt(child.attr("level")));
//					testcase.setPreCondition(child.attr("precondition"));
//					testcases.add(testcase);
//				}
//				
//				appInfoList.add(new AppInfo(testcases, name, binary));
//			}
//			
//			
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//		
//		return appInfoList;
//	}
	
	public static void writeXml(java.util.List<AppInfo> appList) {
		try {
			org.w3c.dom.Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();
			
			org.w3c.dom.Element root = (Element) doc.createElement("meunutree");
			doc.appendChild(root);
			
			for (AppInfo appInfo : appList) {
				Element table = doc.createElement("app")
			}
			
			
			
		} catch (ParserConfigurationException e) {

			e.printStackTrace();
		}
		
	}
	
	
}
