package com.turbovnc.vncviewer;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Scanner;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.TransformerFactoryConfigurationError;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


public class UIInterfaceRunner {
	public static void main(String [] arges) {
		ArrayList<SdbDevice> deviceList = new ArrayList<SdbDevice>();

		String cmdReply = runProcess("sdb", "devices");
		Scanner sc = new Scanner(cmdReply);
		sc.nextLine();
		while(sc.hasNextLine()) {
			String deviceInfo = sc.nextLine();
			String []parts = deviceInfo.split(" ");
			if(parts.length == 3) {
				deviceList.add(new SdbDevice(parts[0], parts[1], parts[2]));
			}
		}
		writeDeviceInfoXML(deviceList);
	}

	private static String runProcess(String... args ) {

		Process p = null;
		String result = "";
		try {
			p = new ProcessBuilder(args).start();
			p.waitFor();

			BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));
			StringBuffer sb = new StringBuffer();
			String s = "";
			while((s=reader.readLine()) != null) {

				sb.append(s+"\n");
			}
			result = sb.toString();
			p.destroy();

		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		return result;
	}
	
	public static void writeDeviceInfoXML(ArrayList<SdbDevice> deviceList) {
		try {
			
			Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();
			Element root = doc.createElement("devicelist");
			doc.appendChild(root);
			
			for (SdbDevice sdbDevice : deviceList) {
				Element row = doc.createElement("device");
				row.setAttribute("name", sdbDevice.getName());
				row.setAttribute("serial", sdbDevice.getSerial());
				row.setAttribute("type", sdbDevice.getType());
				root.appendChild(row);
				System.out.println(sdbDevice.getName());
			}
			Transformer transformer = TransformerFactory.newInstance().newTransformer();
		    StringWriter writer = new StringWriter();
		    StreamResult result = new StreamResult(writer);
		    transformer.transform(new DOMSource(doc), result);

		    PrintWriter pw = new PrintWriter(new File("config.xml"));
		    pw.write(writer.toString());
		    pw.flush();
		    pw.close();
		    
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
}
