import java.io.File;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.stage.DirectoryChooser;
import javafx.stage.Stage;

public class RcpttRunnerSettingsController implements Initializable{

	@FXML
	private Button saveBtn;

	@FXML
	private Button closeBtn;
	
	@FXML
	private Button browseSDKPathBtn;

	@FXML
	private Button browseReprotPathBtn;	
	
	@FXML
	private TextField sdkPathTxt;
	
	@FXML
	private TextField reportPathTxt;
	
	@FXML
	private TextField sampleServerTxt;
	
	@FXML
	private TextField serverIdlTxt;
	
	@FXML
	private TextField serverPassTxt;
	
	@FXML
	private TextField projectNameTxt;
	
	@FXML
	private TextField rcpttVersionTxt;
		
	@FXML
	private TextField rcpttLauncherTxt;
		
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		Utils.readParameterVariable();
				
		sdkPathTxt.setText(Utils.getValue(Constants.SDK_PATH));
		reportPathTxt.setText(Utils.getValue(Constants.REPORT_PATH));
		sampleServerTxt.setText(Utils.getValue(Constants.SERVER_LINK));
		serverIdlTxt.setText(Utils.getValue(Constants.SERVER_ID));
		serverPassTxt.setText(Utils.getValue(Constants.SERVER_PASSWORD));
		projectNameTxt.setText(Utils.getValue(Constants.PROJECT_NAME));
		rcpttVersionTxt.setText(Utils.getValue(Constants.RCPTT_VERSION));
		rcpttLauncherTxt.setText(Utils.getValue(Constants.RCPTT_LAUNCHER));
	}

	public void browseBtnClicked(ActionEvent event) {		
		if(event.getSource().equals(browseSDKPathBtn)) {
			DirectoryChooser chooser = new DirectoryChooser();
			chooser.setTitle("Select Tizen SDK/Studio Path");
			File defaultDirectory = new File(System.getProperty("user.home"));
			chooser.setInitialDirectory(defaultDirectory);
			File selectedDirectory = chooser.showDialog(null);

			if (selectedDirectory != null){
				sdkPathTxt.setText(selectedDirectory.getAbsolutePath());
			}
		} else if(event.getSource().equals(browseReprotPathBtn)) {
			DirectoryChooser chooser = new DirectoryChooser();
			chooser.setTitle("Select Report Directory");
			File defaultDirectory = new File(System.getProperty("user.home"));
			chooser.setInitialDirectory(defaultDirectory);
			File selectedDirectory = chooser.showDialog(null);

			if (selectedDirectory != null){
				reportPathTxt.setText(selectedDirectory.getAbsolutePath());
			}
		} 
	}
		
	public void closeBtnClicked(ActionEvent event) {
	    Stage stage = (Stage) closeBtn.getScene().getWindow();
	    stage.close();
	}
	
	public void saveBtnClicked(ActionEvent event) {
		Utils.setValue(Constants.SDK_PATH, sdkPathTxt.getText());
		Utils.setValue(Constants.REPORT_PATH, reportPathTxt.getText());
		Utils.setValue(Constants.SERVER_LINK, sampleServerTxt.getText());
		Utils.setValue(Constants.SERVER_ID, serverIdlTxt.getText());
		Utils.setValue(Constants.SERVER_PASSWORD, serverPassTxt.getText());
		Utils.setValue(Constants.PROJECT_NAME, projectNameTxt.getText());
		Utils.setValue(Constants.RCPTT_VERSION, rcpttVersionTxt.getText());
		Utils.setValue(Constants.RCPTT_LAUNCHER, rcpttLauncherTxt.getText());
		
		Utils.writeParameterVariable();
	
		Alert alert = new Alert(AlertType.INFORMATION);
		alert.setTitle("Message");
		alert.setHeaderText(null);
		alert.setContentText("SDKAutomator configuration saved successfully");
		alert.showAndWait();
	}	
}
